//
// MIT License
//
// Copyright (c) 2017-2018 Thibault Martinez and Simon Ninon
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
//
//

#include <gtest/gtest.h>

#include <iota/crypto/curl.hpp>
#include <iota/errors/crypto.hpp>
#include <iota/types/trinary.hpp>
#include <test/utils/expect_exception.hpp>

//!
//! Tests are based on real values (can be found on iota tangle explorer)
//! Output is a valid bundle hash
//!

TEST(Curl, AbsorbAndSqeeze) {
  IOTA::Crypto::Curl c;

  c.absorb(IOTA::Types::trytesToTrits(
      "KPWCHICGJZXKE9GSUDXZYUAPLHAKAHYHDXNPHENTERYMMBQOPSQIDENXKLKCEYCPVTZQLEEJVYJZV9BWU99999999999"
      "9999999999999999MNPL99999999999999999999999RUKCAXD99999999999A99999999"));

  c.absorb(IOTA::Types::trytesToTrits(
      "99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999"
      "9999999999999999999999999999999999999999999RUKCAXD99A99999999A99999999"));

  c.absorb(IOTA::Types::trytesToTrits(
      "SPAMSPAMSPAM99999999999999999999999999999999999999999999999999999999999999999999999999999999"
      "99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999"
      "99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999"
      "99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999"
      "99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999"
      "99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999"
      "99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999"
      "99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999"
      "99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999"
      "99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999"
      "99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999"
      "99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999"
      "99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999"
      "99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999"
      "99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999"
      "99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999"
      "99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999"
      "99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999"
      "99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999"
      "99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999"
      "99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999"
      "99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999"
      "99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999"
      "99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999"
      "99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999"
      "9999999999999999999999MFEGAXD99999999999999999999OEQXMGAVOEAPIBSUUYWPGCXBSNBKGGVKLTVMBUBLLXK"
      "ISI9EBIFWKOQ9QECUETLGCAYRTLTRQXBLNXOFDQYRCKTCKXQLSLTMXDLTWYUEMBNSMOLJFWVHOSNZUXICZWKWPQCUPQZ"
      "PRYZILEWTNWRRKMASDSRCN99999CFNEKLBPISWWHJMZFNEYSITSXAXNUF9WSV9H9WZTBOPBCEOYKHXOTUMORFERYEJJD"
      "XRCHGOXODZ9Z9999999999999999999999999999999SXKLXQCIE999999999L99999999LURBXNQVXYSHUMTADJJYTY"
      "STHMI"));

  IOTA::Types::Trits res(IOTA::TritHashLength);
  c.squeeze(res);

  EXPECT_EQ(IOTA::Types::tritsToTrytes(res),
            "XKIQFBIIPYNNSQEXIKTZELEIVLFPPYCOYSCCCFRSGUFOS9QNUCLJOTRCHMIEVDZABIPPPAPKKWAWZFOFT");
}

TEST(Curl, AbsorbInvalidTritsLength) {
  IOTA::Crypto::Curl c;
  IOTA::Types::Trits trits;

  trits.push_back(1);

  EXPECT_EXCEPTION(c.absorb(trits, 0, 0), IOTA::Errors::Crypto,
                   "Curl::absorb failed: illegal length");
}

TEST(Curl, SqueezeInvalidTritsLength) {
  IOTA::Crypto::Curl c;
  IOTA::Types::Trits trits;

  trits.push_back(1);

  EXPECT_EXCEPTION(c.squeeze(trits, 0, 0), IOTA::Errors::Crypto,
                   "Curl::squeeze failed: illegal length");
}

TEST(Curl, Reset) {
  IOTA::Crypto::Curl c;

  //! Test with one curl some absorb
  c.absorb(IOTA::Types::trytesToTrits(
      "KPWCHICGJZXKE9GSUDXZYUAPLHAKAHYHDXNPHENTERYMMBQOPSQIDENXKLKCEYCPVTZQLEEJVYJZV9BWU99999999999"
      "9999999999999999MNPL99999999999999999999999RUKCAXD99999999999A99999999"));

  IOTA::Types::Trits res(IOTA::TritHashLength);
  c.squeeze(res);

  EXPECT_EQ(IOTA::Types::tritsToTrytes(res),
            "SRMFSVMTJCABOJEROVGLGZAEAJYHIIESFU9ZZCMKHGSVGGBNPFKGWUZNFLWRNFCBBDENYKHZDT9RBXXIW");

  //! Test with another curl absorbing two times
  IOTA::Crypto::Curl c2;

  c2.absorb(IOTA::Types::trytesToTrits(
      "KPWCHICGJZXKE9GSUDXZYUAPLHAKAHYHDXNPHENTERYMMBQOPSQIDENXKLKCEYCPVTZQLEEJVYJZV9BWU99999999999"
      "9999999999999999MNPL99999999999999999999999RUKCAXD99999999999A99999999"));

  c2.absorb(IOTA::Types::trytesToTrits(
      "KPWCHICGJZXKE9GSUDXZYUAPLHAKAHYHDXNPHENTERYMMBQOPSQIDENXKLKCEYCPVTZQLEEJVYJZV9BWU99999999999"
      "9999999999999999MNPL99999999999999999999999RUKCAXD99999999999A99999999"));

  IOTA::Types::Trits res2(IOTA::TritHashLength);
  c2.squeeze(res2);

  EXPECT_EQ(IOTA::Types::tritsToTrytes(res2),
            "VDFLINO9F9PNTQLRDDKIYILPCSBTYXKFNDEI9NYGXXQON9HIRZUJEWSQFKGCZPGAEOILBZDCNTRHJFRXA");

  //! Retest doing reset
  IOTA::Crypto::Curl c3;

  c3.absorb(IOTA::Types::trytesToTrits(
      "KPWCHICGJZXKE9GSUDXZYUAPLHAKAHYHDXNPHENTERYMMBQOPSQIDENXKLKCEYCPVTZQLEEJVYJZV9BWU99999999999"
      "9999999999999999MNPL99999999999999999999999RUKCAXD99999999999A99999999"));

  c3.reset();

  c3.absorb(IOTA::Types::trytesToTrits(
      "KPWCHICGJZXKE9GSUDXZYUAPLHAKAHYHDXNPHENTERYMMBQOPSQIDENXKLKCEYCPVTZQLEEJVYJZV9BWU99999999999"
      "9999999999999999MNPL99999999999999999999999RUKCAXD99999999999A99999999"));

  IOTA::Types::Trits res3(IOTA::TritHashLength);
  c3.squeeze(res3);

  EXPECT_EQ(IOTA::Types::tritsToTrytes(res3),
            "SRMFSVMTJCABOJEROVGLGZAEAJYHIIESFU9ZZCMKHGSVGGBNPFKGWUZNFLWRNFCBBDENYKHZDT9RBXXIW");
}
